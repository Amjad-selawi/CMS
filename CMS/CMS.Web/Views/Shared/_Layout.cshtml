@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg" data-sidebar-image="none" data-preloader="disable">


<head>

    <meta charset="utf-8" />
    <title>@ViewData["Title"] - CMS </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Themesbrand" name="author" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/theme/images/favicon.ico">
    <!-- Layout config Js -->
    <script src="~/theme/js/layout.js"></script>
    <!-- Bootstrap Css -->
    <link href="~/theme/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="~/theme/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="~/theme/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="~/theme/css/custom.min.css" rel="stylesheet" type="text/css" />






    <style>
        /* Style for notification container */
        #notification-container {
            position: relative;
        }

        /* Style for notification button */
        #notification-dropdown {
            background-color: #007bff;
            color: #fff;
        }


        #notification-dropdownGM {
            background-color: #007bff;
            color: #fff;
        }

        #notification-dropdownHR {
            background-color: #007bff;
            color: #fff;
        }

        #notification-dropdownInterviewer {
            background-color: #007bff;
            color: #fff;
        }

        /* Style for the dropdown content */
        .dropdown-menu {
            max-height: 300px; /* Set a maximum height for the dropdown */
            overflow-y: auto; /* Enable vertical scrolling if content overflows */
        }

        /* Style for notification list item */
        .notification-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        /* Style for notification title */
        .notification-title {
            font-weight: bold;
            color: #333;
        }

        /* Style for notification body description */
        .notification-body {
            color: #777;
        }

        /* Style for notification date */
        .notification-date {
            color: #999;
        }

        /* Style for no notifications message */
        .no-notifications {
            padding: 10px;
            text-align: center;
            color: #777;
        }
    </style>


</head>

<body>

    <!-- Begin page -->
    <div id="layout-wrapper">

        <header id="page-topbar">
            <div class="layout-width">
                <div class="navbar-header">
                    <div class="d-flex">
                        <!-- LOGO -->
                        <div class="navbar-brand-box horizontal-logo">
                            <a href="/" class="logo logo-dark">
                                <span class="logo-sm">
                                    <img src="~/theme/images/logo-sm.png" alt="" height="22">
                                </span>
                                <span class="logo-lg">
                                    <img src="~/theme/images/logo-dark.png" alt="" height="17">
                                </span>
                            </a>

                            <a href="/" class="logo logo-light">
                               @*  <span class="logo-sm">
                                    <img src="~/theme/images/logo-sm.png" alt="" height="22">
                                </span> *@
                                @* <span class="logo-lg">
                                    <img src="~/theme/images/logo-light.png" alt="" height="17">

                                </span> *@
                                <span class="logo-lg">
                                    <img src="~/theme/images/candidate-logo.png" alt="" height="17">
                                </span>
                            </a>
                        </div>

                        <button type="button" class="btn btn-sm px-3 fs-16 header-item vertical-menu-btn topnav-hamburger" id="topnav-hamburger-icon">
                            <span class="hamburger-icon">
                                <span></span>
                                <span></span>
                                <span></span>
                            </span>
                        </button>

                   </div>

                    <div class="d-flex align-items-center">
                        <div class="ms-1 header-item d-none d-sm-flex">
                            <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle" data-toggle="fullscreen">
                                <i class='bx bx-fullscreen fs-22'></i>
                            </button>
                        </div>

                        <div class="ms-1 header-item d-none d-sm-flex">
                            <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle light-dark-mode">
                                <i class='bx bx-moon fs-22'></i>
                            </button>
                        </div>







                        @* Icon *@

                        @if (User.IsInRole("General Manager"))
                        {
                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    loadNotificationsGM();
                                });
                            </script>
                            <div class="dropdown topbar-head-dropdown ms-1 header-item" id="notificationDropdownGM">
                                <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle" id="page-header-notifications-dropdownGM" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-haspopup="true" aria-expanded="false">
                                    <i class='bx bx-bell fs-22'></i>
                                    <span class="position-absolute topbar-badge fs-10 translate-middle badge rounded-pill bg-danger" id="notification-badgeGM"><span class="visually-hidden">unread messages</span></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0" aria-labelledby="page-header-notifications-dropdownGM">
                                    <div class="dropdown-head bg-primary bg-pattern rounded-top">
                                        <div class="p-3">
                                            <div class="row align-items-center">
                                                <div class="col">
                                                    <h6 class="m-0 fs-16 fw-semibold text-white">Notifications</h6>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="px-2 pt-2">
                                            <ul class="nav nav-tabs dropdown-tabs nav-tabs-custom" data-dropdown-tabs="true" id="notificationItemsTabGM" role="tablist">
                                                <li class="nav-item waves-effect waves-light">
                                                    <a class="nav-link active" data-bs-toggle="tab" href="#all-noti-tabGM" role="tab" aria-selected="true">
                                                        All
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>

                                    <div id="notifications-listGM">
                                        <!-- Notifications will be loaded here dynamically -->
                                    </div>

                                    <div class="my-3 text-center view-all">
                                        <a asp-action="IndexGMnotification" asp-controller="Notifications" class="btn btn-soft-success waves-effect waves-light" id="see-all-linkGM">
                                            View All Notifications <i class="ri-arrow-right-line align-middle"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>

                        }

                        else if (User.IsInRole("HR Manager"))
                        {
                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    loadNotificationsHR();
                                });
                            </script>
                            <div class="dropdown topbar-head-dropdown ms-1 header-item" id="notificationDropdownHR">
                                <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle" id="page-header-notifications-dropdownHR" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-haspopup="true" aria-expanded="false">
                                    <i class='bx bx-bell fs-22'></i>
                                    <span class="position-absolute topbar-badge fs-10 translate-middle badge rounded-pill bg-danger" id="notification-badgeHR"><span class="visually-hidden">unread messages</span></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0" aria-labelledby="page-header-notifications-dropdownHR">
                                    <div class="dropdown-head bg-primary bg-pattern rounded-top">
                                        <div class="p-3">
                                            <div class="row align-items-center">
                                                <div class="col">
                                                    <h6 class="m-0 fs-16 fw-semibold text-white">Notifications</h6>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="px-2 pt-2">
                                            <ul class="nav nav-tabs dropdown-tabs nav-tabs-custom" data-dropdown-tabs="true" id="notificationItemsTabHR" role="tablist">
                                                <li class="nav-item waves-effect waves-light">
                                                    <a class="nav-link active" data-bs-toggle="tab" href="#all-noti-tabHR" role="tab" aria-selected="true">
                                                        All
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>

                                    <div id="notifications-listHR">
                                        <!-- Notifications will be loaded here dynamically -->
                                    </div>

                                    <div class="my-3 text-center view-all">
                                        <a asp-action="IndexHRnotification" asp-controller="Notifications" class="btn btn-soft-success waves-effect waves-light" id="see-all-linkHR">
                                            View All Notifications <i class="ri-arrow-right-line align-middle"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>

                        }

                        else if (User.IsInRole("Interviewer"))
                        {
                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    loadNotificationsInterviewer();
                                });
                            </script>
                            <div class="dropdown topbar-head-dropdown ms-1 header-item" id="notificationDropdownInterviewer">
                                <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle" id="page-header-notifications-dropdownInterviewer" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-haspopup="true" aria-expanded="false">
                                    <i class='bx bx-bell fs-22'></i>
                                    <span class="position-absolute topbar-badge fs-10 translate-middle badge rounded-pill bg-danger" id="notification-badgeInterviewer"><span class="visually-hidden">unread messages</span></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0" aria-labelledby="page-header-notifications-dropdownInterviewer">
                                    <div class="dropdown-head bg-primary bg-pattern rounded-top">
                                        <div class="p-3">
                                            <div class="row align-items-center">
                                                <div class="col">
                                                    <h6 class="m-0 fs-16 fw-semibold text-white">Notifications</h6>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="px-2 pt-2">
                                            <ul class="nav nav-tabs dropdown-tabs nav-tabs-custom" data-dropdown-tabs="true" id="notificationItemsTabInterviewer" role="tablist">
                                                <li class="nav-item waves-effect waves-light">
                                                    <a class="nav-link active" data-bs-toggle="tab" href="#all-noti-tabInterviewer" role="tab" aria-selected="true">
                                                        All
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>

                                    <div id="notifications-listInterviewer">
                                        <!-- Notifications will be loaded here dynamically -->
                                    </div>

                                    <div class="my-3 text-center view-all">
                                        <a asp-action="IndexInterviewernotification" asp-controller="Notifications" class="btn btn-soft-success waves-effect waves-light" id="see-all-linkInterviewer">
                                            View All Notifications <i class="ri-arrow-right-line align-middle"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>

                        }






                        @* end of the icon *@





                        <div class="dropdown ms-sm-3 header-item topbar-user">
                            <button type="button" class="btn" id="page-header-user-dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="d-flex align-items-center">
                                    <img class="rounded-circle header-profile-user" src="~/theme/images/users/avatar-1.jpg" alt="Header Avatar">
                                    <span class="text-start ms-xl-2">
                                        <span class="d-none d-xl-inline-block ms-1 fw-medium user-name-text">@User.Identity.Name</span>
                                        <span class="d-none d-xl-block ms-1 fs-12 user-name-sub-text"></span>
                                    </span>
                                </span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end">
                                <!-- item-->
                                <h6 class="dropdown-header">Welcome @User.Identity.Name !</h6>
                                @* <a class="dropdown-item" href="pages-profile.html"><i class="mdi mdi-account-circle text-muted fs-16 align-middle me-1"></i> <span class="align-middle">Profile</span></a> *@
                                @* <a class="dropdown-item" href="apps-chat.html"><i class="mdi mdi-message-text-outline text-muted fs-16 align-middle me-1"></i> <span class="align-middle">Messages</span></a> *@
                                <div class="dropdown-divider"></div>
                                @* <a class="dropdown-item" href="pages-profile-settings.html"><i class="mdi mdi-cog-outline text-muted fs-16 align-middle me-1"></i> <span class="align-middle">Settings</span></a> *@
                                <a class="dropdown-item" asp-controller="Account" asp-action="Logout"><i class="mdi mdi-logout text-muted fs-16 align-middle me-1"></i> <span class="align-middle" data-key="t-logout">Logout</span></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <!-- removeNotificationModal -->
        <div id="removeNotificationModal" class="modal fade zoomIn" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="NotificationModalbtn-close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mt-2 text-center">
                            <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#f7b84b,secondary:#f06548" style="width:100px;height:100px"></lord-icon>
                            <div class="mt-4 pt-2 fs-15 mx-4 mx-sm-5">
                                <h4>Are you sure ?</h4>
                                <p class="text-muted mx-4 mb-0">Are you sure you want to remove this Notification ?</p>
                            </div>
                        </div>
                        <div class="d-flex gap-2 justify-content-center mt-4 mb-2">
                            <button type="button" class="btn w-sm btn-light" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn w-sm btn-danger" id="delete-notification">Yes, Delete It!</button>
                        </div>
                    </div>

                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div>
        <!-- /.modal -->
        <!-- ========== App Menu ========== -->
        <div class="app-menu navbar-menu">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <!-- Dark Logo-->
                <a href="/" class="logo logo-dark">
                    <span class="logo-sm">
                        <img src="~/theme/images/logo-sm.png" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/theme/images/logo-dark.png" alt="" height="17">
                    </span>
                </a>
                <!-- Light Logo-->
                <a href="/" class="logo logo-light">
                   @*  <span class="logo-sm">
                        <img src="~/theme/images/logo-sm.png" alt="" height="22">
                    </span> *@
                   @*  <span class="logo-lg">
                        <img src="~/theme/images/logo-light.png" alt="" height="17">
                    </span> *@
                </a> 
                <button type="button" class="btn btn-sm p-0 fs-20 header-item float-end btn-vertical-sm-hover" id="vertical-hover">
                    <i class="ri-record-circle-line"></i>
                </button>
            </div>

            <div id="scrollbar">
                <div class="container-fluid">
                    <div id="two-column-menu">
                    </div>
                    @{
                        var NavLinks = new[] {
                    new
                    {
                    Controller =  "Dashboard",
                    Action = "Index",
                    Icon = "ri-dashboard-fill",
                    Label = "Dashboard",
                    Roles = new[] {"Admin","General Manager","HR Manager"}
                    },
                    new
                    {
                    Controller =  "Interviews",
                    Action = "Index",
                    Icon = "ri-team-fill",
                    Label = "Interviews",
                    Roles = new[] {"Admin","HR Manager"}
                    },
                    new
                    {
                    Controller =  "Interviews",
                    Action = "MyInterviews",
                    Icon = "ri-team-fill",
                    Label = "My Interviews",
                    Roles = new[] {"Interviewer","HR Manager", "General Manager"}
                    },
                    new
                    {
                    Controller =  "Position",
                    Action = "GetPositions",
                    Icon = "ri-tv-fill",
                    Label = "Positions",
                    Roles = new[] {"Admin","HR Manager"}
                    },
                    new
                    {
                    Controller =  "Candidates",
                    Action = "Index",
                    Icon = "ri-user-star-fill",
                    Label = "Candidates",
                    Roles = new[] {"Admin","HR Manager"}
                    },
                    new
                    {
                    Controller =  "Notifications",
                    Action = "Index",
                    Icon = "ri-tv-fill",
                    Label = "Notifications",
                    Roles = new[] {"HR Manager"}
                    },
                    // new
                    // {
                    //     Controller =  "Templates",
                    //     Action = "Index",
                    //     Icon = "ri-pages-line",
                    //     Label = "Templates",
                    //     Roles = new[] {"Admin"}
                    // },
                    //new
                    //{
                    //    Controller =  "AppRoles",
                    //    Action = "Index",
                    //    Icon = "ri-map-pin-user-fill",
                    //    Label = "Roles",
                    //    Roles = new[] {"Admin"}
                    //},
                    new
                    {
                    Controller =  "Account",
                    Action = "Index",
                    Icon = "ri-map-pin-user-fill",
                    Label = "Users",
                    Roles = new[] {"Admin"}
                    },
                    //new
                    //{
                    //    Controller =  "Status",
                    //    Action = "Get",
                    //    Icon = "ri-map-pin-user-fill",
                    //    Label = "Interview Status",
                    //    Roles = new[] {"Admin"}
                    //},
                    new
                    {
                    Controller =  "Country",
                    Action = "GetCountries",
                    Icon = "ri-map-pin-user-line",
                    Label = "Countries",
                    Roles = new[] {"Admin","HR Manager"}
                    },
                    new
                    {
                    Controller =  "Company",
                    Action = "GetCompanies",
                    Icon = "ri-community-line",
                    Label = "Companies",
                    Roles = new[] {"Admin","HR Manager"}
                    },
                    new
                    {
                    Controller =  "SearchInterviews",
                    Action = "Index",
                    Icon = "bx bx-search-alt-2",
                    Label = "Interviews Filter",
                    Roles = new[] {"Admin","HR Manager"}
                    },

                                };
                    }
                    <ul class="navbar-nav" id="navbar-nav">
                        @foreach (var item in NavLinks)
                        {
                            bool canShowItem = false;
                            foreach (var role in item.Roles)
                            {
                                if (User.IsInRole(role))
                                {
                                    canShowItem = true;
                                    break;
                                }
                            }
                            @if (canShowItem)
                            {
                                <li class="nav-item">
                                    <a class="nav-link menu-link" asp-controller="@item.Controller" asp-action="@item.Action">
                                        <i class="@item.Icon"></i> <span data-key="t-dashboards">@item.Label</span>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </div>
                <!-- Sidebar -->
            </div>

            <div class="sidebar-background"></div>
        </div>
        <!-- Left Sidebar End -->
        <!-- Vertical Overlay-->
        <div class="vertical-overlay"></div>

        <!-- ============================================================== -->
        <!-- Start right Content here -->
        <!-- ============================================================== -->
        <div class="main-content">

            <div class="page-content">
                <div class="container-fluid">

                    <!-- start page title -->
                    <div class="row">
                        <div class="col-12">
                            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                                <h4 class="mb-sm-0">@ViewData["Title"]</h4>

                                <!-- <div class="page-title-right">
                                    <ol class="breadcrumb m-0">
                                        <li class="breadcrumb-item"><a href="javascript: void(0);">Pages</a></li>
                                        <li class="breadcrumb-item active">Starter</li>
                                    </ol>
                                </div> -->

                            </div>
                        </div>
                    </div>
                    <!-- end page title -->
                    @RenderBody()
                </div>
                <!-- container-fluid -->
            </div>
            <!-- End Page-content -->

            <footer class="footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-sm-6">
                            <script>document.write(new Date().getFullYear())</script> © TPS.
                        </div>
                    </div>
                </div>
            </footer>
        </div>
        <!-- end main content-->

    </div>
    <!-- END layout-wrapper -->
    <!--start back-to-top-->
    @*  <button onclick="topFunction()" class="btn btn-danger btn-icon" id="back-to-top">
    <i class="ri-arrow-up-line"></i>
    </button> *@
    <!--end back-to-top-->
    <!--preloader-->
    <div id="preloader">
        <div id="status">
            <div class="spinner-border text-primary avatar-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

    @*     <script>
    // Function to fetch and display notifications
    function loadNotifications() {
    // Make an AJAX request to fetch notifications
    $.get('/notifications', function (data) {
    // Assuming 'data' contains an array of notifications
    var notifications = data.notifications;

    // Clear the existing notifications
    $('#notifications-list').empty();

    // Loop through the notifications and display them
    notifications.forEach(function (notification) {
    var notificationHtml = '<div class="notification">' + notification.message + '</div>';
    $('#notifications-list').append(notificationHtml);
    });
    });
    }

    // Attach a click event to the notification icon
    $('#notification-container').on('click', function () {
    // Load and display notifications when the icon is clicked
    loadNotifications();
    });
    </script>
    *@

    <!-- JAVASCRIPT -->
    <script src="~/theme/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/theme/libs/simplebar/simplebar.min.js"></script>
    <script src="~/theme/libs/node-waves/waves.min.js"></script>
    <script src="~/theme/libs/feather-icons/feather.min.js"></script>
    <script src="~/theme/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="~/theme/js/plugins.js"></script>
    @{
        string[] scripts = ViewData["additionalJS"] as string[];
        if (scripts != null)
        {
            foreach (var item in scripts)
            {
                <script src="@item"></script>
            }
        }
    }

    <!-- App js -->
    <script src="~/theme/js/app.js"></script>





    @* GM *@
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonGM = document.getElementById("page-header-notifications-dropdownGM");
            if (notificationButtonGM != undefined) {
                notificationButtonGM.addEventListener("click", loadNotificationsGM);
                updateBadgeCountGM(0);
            }
        });
        var GMNotificationURl = '@Url.Action("GetNotificationsForGeneralManager","Notifications")';
        async function loadNotificationsGM() {
            try {
                const response = await fetch(GMNotificationURl);
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listGM");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                <div class="notification-title">${notification.title}</div>
                                                <div class="notification-body">${notification.bodyDesc}</div>
                                            `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkGM");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountGM(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountGM(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountGM(count) {
            const badge = document.getElementById("notification-badgeGM");
            badge.textContent = count.toString();
        }
    </script>


    @* HR *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonHR = document.getElementById("page-header-notifications-dropdownHR");
            if (notificationButtonHR != undefined) {
                notificationButtonHR.addEventListener("click", loadNotificationsHR);
                updateBadgeCountHR(0);
            }
        });
        var HRNotificationURl = '@Url.Action("GetNotificationsForHR","Notifications")';
        async function loadNotificationsHR() {
            try {
                const response = await fetch(HRNotificationURl);
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listHR");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                        <div class="notification-title">${notification.title}</div>
                                                        <div class="notification-body">${notification.bodyDesc}</div>
                                                    `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkHR");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountHR(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountHR(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountHR(count) {
            const badge = document.getElementById("notification-badgeHR");
            badge.textContent = count.toString();
        }
    </script>

    @* Interviewer *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonInterviewer = document.getElementById("page-header-notifications-dropdownInterviewer");

            if (notificationButtonInterviewer != undefined) {
                notificationButtonInterviewer.addEventListener("click", loadNotificationsInterviewer);
                updateBadgeCountInterviewer(0);
            }
        });
        var IntervierweNotificationURl = '@Url.Action("GetNotificationsForInterviewers","Notifications")';

        async function loadNotificationsInterviewer() {
            try {
                const response = await fetch(IntervierweNotificationURl);
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listInterviewer");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                                <div class="notification-title">${notification.title}</div>
                                                                <div class="notification-body">${notification.bodyDesc}</div>
                                                            `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkInterviewer");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountInterviewer(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountInterviewer(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountInterviewer(count) {
            const badge = document.getElementById("notification-badgeInterviewer");
            badge.textContent = count.toString();
        }
    </script>






</body>

</html>