@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CMS.Web</title>


    <link rel="stylesheet" href="~/libb/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">

    <!-- Vendor CSS Files -->
    <link href="~/lib/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/quill/quill.snow.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/quill/quill.bubble.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
    <link href="~/lib/assets/vendor/simple-datatables/style.css" rel="stylesheet">
    <link src="https://cdn.syncfusion.com/ej2/22.2.9/fluent.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.syncfusion.com/ej2/22.2.9/dist/ej2.min.js"></script>



    <link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css">
    <script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>


    <!-- Add this link to the head section or a common place for CSS imports -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />


    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" />
    <link href="~/css2/styles.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js" crossorigin="anonymous"></script>


    <!-- Jquery -->
    <script src="~/jquery/jquery.js"></script>
    <script src="~/jquery/jquery.js"></script>
    <script src="~/jquery-validate/jquery.validate.js"></script>
    <script src="~/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link href="~/lib/assets/css/style.css" rel="stylesheet">

    <link rel="stylesheet" href="~/libb/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />




    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="path/to/chartjs/dist/chart.umd.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <!-- HTML -->
    <style>
        /* Style for notification container */
        #notification-container {
            position: relative;
        }

        /* Style for notification button */
        #notification-dropdown {
            background-color: #007bff;
            color: #fff;
        }


        #notification-dropdownGM {
            background-color: #007bff;
            color: #fff;
        }

        #notification-dropdownHR {
            background-color: #007bff;
            color: #fff;
        }

        #notification-dropdownInterviewer {
            background-color: #007bff;
            color: #fff;
        }

        /* Style for the dropdown content */
        .dropdown-menu {
            max-height: 300px; /* Set a maximum height for the dropdown */
            overflow-y: auto; /* Enable vertical scrolling if content overflows */
        }

        /* Style for notification list item */
        .notification-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        /* Style for notification title */
        .notification-title {
            font-weight: bold;
            color: #333;
        }

        /* Style for notification body description */
        .notification-body {
            color: #777;
        }

        /* Style for notification date */
        .notification-date {
            color: #999;
        }

        /* Style for no notifications message */
        .no-notifications {
            padding: 10px;
            text-align: center;
            color: #777;
        }
    </style>


</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">CMS.Web</a>

            <h6 style="font-size: 12px;margin-top: 11px;margin-left: 32px;">Welcome, @User.Identity.Name!</h6>
            
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
            
                @*       @if (ViewData["UserId"] != null)
                    {
      
                             var userRole = ViewData["UserRole"] as string;
                                if (userRole == "HR")
                                    {
                     *@

                            @* <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                            </li> *@
                           @*  <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Company" asp-action="GetCompanies">Companies</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Country" asp-action="GetCountries">Countries</a>
                            </li> *@



                    @if (SignInManager.IsSignedIn(User))
                    {

                        @if (User.IsInRole("General Manger"))
                        {
                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    loadNotificationsGM();
                                });
                            </script>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="CarrerOffer" asp-action="Index">CareerOffer</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Interviews" asp-action="MyInterviews">Interviews</a>
                            </li>

                         

                            <li>
                                <a style="margin-right: 40px;" class="nav-link text-dark" asp-area="" asp-action="Logout" asp-controller="Account">Logout</a>
                            </li>

                            <div id="notification-container" class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="notification-dropdownGM" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="ri-notification-2-line"></i>
                                    <span id="notification-badgeGM" class="badge badge-danger"></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notification-dropdown">
                                    <div id="notifications-listGM">
                                    </div>
                                    <div class="dropdown-divider"></div>
                                    <a id="see-all-linkGM" asp-action="IndexGMnotification" asp-controller="Notifications">See All</a>
                                </div>
                            </div>




                        }

                        else if (User.IsInRole("HR"))
                        {
                              <script>
                                    document.addEventListener("DOMContentLoaded", function () {
                                 loadNotificationsHR();
                                                         });
                              </script>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Position" asp-action="GetPositions">Positions</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Candidates" asp-action="Index">Candidates</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Interviews" asp-action="Index">Interviews</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Interviews" asp-action="MyInterviews">MyInterviews</a>
                            </li>
                           
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Templates" asp-action="Index">Templates</a>
                            </li>
                          

                            <li>
                                <a style="margin-right: 40px;" class="nav-link text-dark" asp-area="" asp-action="Logout" asp-controller="Account">Logout</a>
                            </li>

                            <div id="notification-container" class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="notification-dropdownHR" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="ri-notification-2-line"></i>
                                    <span id="notification-badgeHR" class="badge badge-danger"></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notification-dropdown">
                                    <div id="notifications-listHR">
                                    </div>
                                    <div class="dropdown-divider"></div>
                                    <a id="see-all-linkHR" asp-action="IndexHRnotification" asp-controller="Notifications">See All</a>
                                </div>
                            </div>


                        }

                        else if (User.IsInRole("Interviewer"))
                        {
                             <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    loadNotificationsInterviewer();
                                });
                            </script>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Interviews" asp-action="MyInterviews">Interviews</a>
                            </li>

                         

                            <li>
                                <a style="margin-right: 40px;" class="nav-link text-dark" asp-area="" asp-action="Logout" asp-controller="Account">Logout</a>
                            </li>

                            <div id="notification-container" class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle" type="button" id="notification-dropdownInterviewer" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="ri-notification-2-line"></i>
                                    <span id="notification-badgeInterviewer" class="badge badge-danger"></span>
                                </button>
                                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notification-dropdown">
                                    <div id="notifications-listInterviewer">
                                    </div>
                                    <div class="dropdown-divider"></div>
                                    <a id="see-all-linkInterviewer" asp-action="IndexInterviewernotification" asp-controller="Notifications">See All</a>
                                </div>
                            </div>
                        }


                    }

                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="AppRoles" asp-action="Index">Roles</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Index">Register</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
                        </li>

                        <li>
                            <a style="margin-right: 40px;" class="nav-link text-dark" asp-area="" asp-action="Logout" asp-controller="Account">Logout</a>
                        </li>

                        <div id="notification-container" class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="notification-dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="ri-notification-2-line"></i>
                                <span id="notification-badge" class="badge badge-danger"></span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notification-dropdown">
                                <div id="notifications-list">
                                </div>
                                <div class="dropdown-divider"></div>
                                <a id="see-all-link" asp-action="Index" asp-controller="Notifications">See All</a>
                            </div>
                        </div>

                    }

                  

             

                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody()
    </div>

    <script src="~/lib/assets/vendor/apexcharts/apexcharts.min.js"></script>
    <script src="~/lib/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/assets/vendor/chart.js/chart.min.js"></script>
    <script src="~/lib/assets/vendor/echarts/echarts.min.js"></script>
    <script src="~/lib/assets/vendor/quill/quill.min.js"></script>
    <script src="~/lib/assets/vendor/simple-datatables/simple-datatables.js"></script>
    <script src="~/lib/assets/vendor/tinymce/tinymce.min.js"></script>
    <script src="~/lib/assets/vendor/php-email-form/validate.js"></script>


    <script src="~/lib/assets/js/main.js"></script>



    <script src="~/libb/jquery/dist/jquery.min.js"></script>
    <script src="~/libb/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>




    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="~/js2/scripts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script>
    <script src="assets/demo/chart-area-demo.js"></script>
    <script src="assets/demo/chart-bar-demo.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" crossorigin="anonymous"></script>
    <script src="~/js2/datatables-simple-demo.js"></script>



   @*  All *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButton = document.getElementById("notification-dropdown");
            notificationButton.addEventListener("click", loadNotifications);

            updateBadgeCount(0);
        });

        async function loadNotifications() {
            try {
                const response = await fetch("/Notifications/GetNotificationsForGeneralManager");
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-list");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                        <div class="notification-title">${notification.title}</div>
                                        <div class="notification-body">${notification.bodyDesc}</div>
                                    `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-link");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCount(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCount(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCount(count) {
            const badge = document.getElementById("notification-badge");
            badge.textContent = count.toString();
        }
    </script>



   @*  GM *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonGM = document.getElementById("notification-dropdownGM");
            notificationButtonGM.addEventListener("click", loadNotificationsGM);

            updateBadgeCountGM(0);
        });

        async function loadNotificationsGM() {
            try {
                const response = await fetch("/Notifications/GetNotificationsForGeneralManager");
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listGM");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                        <div class="notification-title">${notification.title}</div>
                                                        <div class="notification-body">${notification.bodyDesc}</div>
                                                    `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkGM");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountGM(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountGM(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountGM(count) {
            const badge = document.getElementById("notification-badgeGM");
            badge.textContent = count.toString();
        }
    </script>

    @*  HR *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonHR = document.getElementById("notification-dropdownHR");
            notificationButtonHR.addEventListener("click", loadNotificationsHR);

            updateBadgeCountHR(0);
        });

        async function loadNotificationsHR() {
            try {
                const response = await fetch("/Notifications/GetNotificationsForHR");
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listHR");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                        <div class="notification-title">${notification.title}</div>
                                                        <div class="notification-body">${notification.bodyDesc}</div>
                                                    `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkHR");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountHR(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountHR(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountHR(count) {
            const badge = document.getElementById("notification-badgeHR");
            badge.textContent = count.toString();
        }

    </script>





@*     <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonHR = document.getElementById("notification-dropdownHR");
            const badgeHR = document.getElementById("notification-badgeHR");

            const badgeCount = getCookie("notificationBadgeCount");
            if (badgeCount) {
                updateNotificationBadgeCount(parseInt(badgeCount, 10));
            }


            // Check if the badge should be hidden based on a cookie
            const badgeHidden = getCookie("badgeHiddenHR");
            if (badgeHidden === "true") {
                badgeHR.style.display = "none"; // Hide the badge
            }

            // Attach a click event listener to hide the badge when the icon is clicked
            notificationButtonHR.addEventListener("click", function () {
                badgeHR.style.display = "none"; // Hide the badge

                // Set a cookie to remember that the badge should be hidden
                setCookie("badgeHiddenHR", "true", 365); // Cookie will expire in 365 days
            });

            // Helper function to set a cookie
            function setCookie(name, value, days) {
                const expires = new Date();
                expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);
                document.cookie = name + "=" + value + ";expires=" + expires.toUTCString() + ";path=/";
            }

            // Helper function to get a cookie
            function getCookie(name) {
                const cookieName = name + "=";
                const cookies = document.cookie.split(";");
                for (let i = 0; i < cookies.length; i++) {
                    let cookie = cookies[i];
                    while (cookie.charAt(0) === " ") {
                        cookie = cookie.substring(1);
                    }
                    if (cookie.indexOf(cookieName) === 0) {
                        return cookie.substring(cookieName.length, cookie.length);
                    }
                }
                return "";
            }
        });




        async function loadNotificationsHR() {
            try {
                const response = await fetch("/Notifications/GetNotificationsForHR");
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listHR");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                <div class="notification-title">${notification.title}</div>
                                <div class="notification-body">${notification.bodyDesc}</div>
                            `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkHR");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountHR(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountHR(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountHR(count) {
            const badge = document.getElementById("notification-badgeHR");
            badge.textContent = count.toString();

        }

        function updateNotificationBadgeCount(count) {
            const badge = document.getElementById("notification-badgeHR");
            badge.textContent = count.toString();
        }

    </script>
 *@


    @*  Interviewer *@
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const notificationButtonInterviewer = document.getElementById("notification-dropdownInterviewer");
            notificationButtonInterviewer.addEventListener("click", loadNotificationsInterviewer);

            updateBadgeCountInterviewer(0);
        });

        async function loadNotificationsInterviewer() {
            try {
                const response = await fetch("/Notifications/GetNotificationsForInterviewers");
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }

                const notifications = await response.json();
                const notificationsList = document.getElementById("notifications-listInterviewer");

                if (notifications.length > 0) {
                    notificationsList.innerHTML = "";

                    // Display the last 2 notifications
                    const lastTwoNotifications = notifications.slice(-2);

                    lastTwoNotifications.forEach((notification) => {
                        const listItem = document.createElement("div");
                        listItem.classList.add("notification-item");
                        listItem.innerHTML = `
                                                <div class="notification-title">${notification.title}</div>
                                                <div class="notification-body">${notification.bodyDesc}</div>
                                            `;

                        notificationsList.appendChild(listItem);
                    });

                    // Check if there are more than 2 notifications
                    if (notifications.length > 2) {
                        const seeAllLink = document.getElementById("see-all-linkInterviewer");
                        seeAllLink.style.display = "block"; // Display the "See All" link
                    }

                    updateBadgeCountInterviewer(notifications.length);
                } else {
                    notificationsList.innerHTML = "<p class='no-notifications'>No notifications available.</p>";
                    updateBadgeCountInterviewer(0);
                }
            } catch (error) {
                console.error("Error loading notifications:", error);
            }
        }

        function updateBadgeCountInterviewer(count) {
            const badge = document.getElementById("notification-badgeInterviewer");
            badge.textContent = count.toString();
        }
    </script>

        


    @*  @RenderSection("Scripts", required: false) *@
</body>
</html>
