@model IEnumerable<CMS.Application.DTOs.NotificationsDTO>

@{
    ViewData["Title"] = "Notifications";
}


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="unread-tab" data-bs-toggle="tab" data-bs-target="#unread" type="button" role="tab" aria-controls="unread" aria-selected="true">UnRead</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="read-tab" data-bs-toggle="tab" data-bs-target="#read" type="button" role="tab" aria-controls="read" aria-selected="false">Read</button>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="unread" role="tabpanel" aria-labelledby="unread-tab">
                
                        <table id="add-rows" class="table" style="width:100%">
                            <thead>
                                <tr>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Title)
                                    </th>

                                    <th>Sent Date</th>

                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count() == 0)
                                {
                                    <tr>
                                        <td colspan="2" class="text-center">No notifications found</td>
                                    </tr>
                                }
                                else
                                {
                                @foreach (var notification in Model.Reverse())
                                {
                                    <tr>


                                        <td>
                                            <a href="@Url.Action("Details", "Notifications", new { id = notification.NotificationsId })">
                                                <span style="@(notification.IsRead ? "color: blue;" : "font-weight: bold; color: black;")">
                                                    @Html.Raw(notification.Title)
                                                </span>
                                            </a>

                                        </td>

                                        <td>@notification.SendDate</td>


                                    </tr>
                                }}
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="read" role="tabpanel" aria-labelledby="read-tab">
                        <table id="add-rows" class="table" style="width:100%">
                            <thead>
                                <tr>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Title)
                                    </th>

                                    <th>Sent Date</th>

                                </tr>
                            </thead>
                            <tbody id="read-notifications-content">
                                @if (Model.Count() == 0)
                                {
                                    <tr>
                                        <td colspan="2" class="text-center">No notifications found</td>
                                    </tr>
                                }
                                else
                                {
                                @foreach (var notification in Model.Reverse())
                                {
                                    <tr>


                                        <td>
                                            <a href="@Url.Action("Details", "Notifications", new { id = notification.NotificationsId })">
                                                <span style="@(notification.IsRead ? "color: blue;" : "font-weight: bold; color: black;")">
                                                    @Html.Raw(notification.Title)
                                                </span>
                                            </a>

                                        </td>

                                        <td>@notification.SendDate</td>


                                    </tr>
                                }}
                            </tbody>
                        </table>

                    </div>
                </div>



            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- SweetAlert2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
    $(document).ready(function () {
    
        $("#read-tab").click(function () {
            $.ajax({
                url: '@Url.Action("AllNotifications", "Notifications")',
                type: 'GET',
                success: function (response) {
                    var tBodyContent = "";
                    $('#read-notifications-content').html("");
                    // Delay the reload for 2 seconds (adjust as needed)
                    response.reverse();
                    response.forEach(notification => {
                        var fontStyle = notification.isRead ? "color: blue;" : "font-weight: bold; color: black;";
                        var sendDate = new Date(notification.sendDate);
                        var formattedDate = sendDate.toLocaleDateString();
                        var formattedTime = sendDate.toLocaleTimeString();

                        // Prepare the read notifications grid body content
                        var htmlCode = tBodyContent;
                        tBodyContent = htmlCode.concat(`<tr>
                                                      <td>
                                                          <a href="/Notifications/Details/`+ notification.notificationsId + `">
                                                                  <span style="`+ fontStyle + `">
                                                                      `+ notification.title + `
                                                              </span>
                                                          </a>
                                                      </td>
                                                         <td>${formattedDate} ${formattedTime}</td>
                                                  </tr>`)
                    })

                    $('#read-notifications-content').html(tBodyContent);

                },
                error: function (xhr, status, error) {
                    console.error("Error to load read notifications: " + error);

                    // Show SweetAlert2 error notification
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to load read notifications.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });

    });
</script>


